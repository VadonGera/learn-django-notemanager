name: Run Tests

# Триггеры для запуска workflow
on:
  push:
    branches:
      - main  # Запуск при пуше в ветку main
  workflow_dispatch:  # Ручной запуск через интерфейс GitHub Actions

jobs:
  test:
    runs-on: ubuntu-latest  # Используем виртуальную машину с Ubuntu

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-  
          --health-cmd "pg_isready -U test_user"  
          --health-interval 10s  
          --health-timeout 5s  
          --health-retries 5  

    steps:
    # 1. Клонируем репозиторий с кодом
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Устанавливаем Python 3.12
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12  # Указываем необходимую версию Python

    # 3. Устанавливаем зависимости проекта
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Обновляем pip
        pip install -r requirements.txt  # Устанавливаем зависимости из requirements.txt

    # 4. Устанавливаем дополнительные зависимости для тестов (если есть)
    - name: Install test dependencies
      run: |
        pip install pytest pytest-django  # Установка pytest, если используется
        # Добавьте другие пакеты, если нужно

    # 5. Устанавливаем переменную окружения для базы данных
    - name: Set database environment variable
      run: echo "DATABASE_URL=postgres://test_user:test_password@localhost:5432/test_db" >> $GITHUB_ENV

    # 6. Запускаем тесты
    - name: Run tests
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}  # Используем переменную с URL базы данных
      run: |
        pytest --cov=notes --cov=users --cov-report=term-missing
        # python manage.py test  # Запускаем тесты через Django
        # Если используете pytest, замените на:
        # pytest
